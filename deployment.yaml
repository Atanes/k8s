kind: Deployment
apiVersion: apps/v1
metadata:
  name: "goserver"
  labels:
    app: "goserver"
spec:
  selector:
    matchLabels:
      app: "goserver"
  replicas: 1
  template:
    metadata:
      name: goserver
      labels:
        app: goserver
    spec:
      containers:
        - name: goserver
          image: "aatanes/hello-go:v5.4"
          resources:
            requests: # Setar o minimo para a aplicação rodar
              cpu: 100m # vCPU -> 1000m (milicores) por padrão, se quiser usar metade 500m.
              memory: 20Mi # 20 megas
            limits:
              cpu: 500m # Máximo de recursos que a aplicação pode utilizar
              memory: 25Mi # Máximo de memória que a aplicação pode utilizar
          startupProbe: # Verifica se a aplicação subiu e está no ar, depois libera para
                        # verificação periodica do readiness e liveness
            httpGet:
              path: /healthz
              port: 8000 
            periodSeconds: 3 # 3 x 30 segundos do failureThreshould, vai verificar até 120 segundos
                             # se a aplicação está no ar, caso contrário não libera a aplicação
            failureThreshold: 30 
          readinessProbe: # Verifica se a aplicação pronta para receber trafego de informações
            httpGet:
              path: /healthz
              port: 8000 
            periodSeconds: 3 
            failureThreshold: 1
          livenessProbe: # Verifica periodicamente se a aplicação está de pé
            httpGet:
              path: /healthz
              port: 8000 
            periodSeconds: 5 
            failureThreshold: 3 # Se 3 erros seguidos aconteceram a aplicação é reiniciada
            timeoutSeconds: 1 
            successThreshold: 1
            
          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret
          volumeMounts:
            - mountPath: "/app/myfamily"
              name: config
            - mountPath: "/app/pvc"
              name: goserver-volume
      volumes:
        - name: goserver-volume
          persistentVolumeClaim:
            claimName: goserver-pvc
          
        - name: config   
          configMap:
            name: configmap-family
            items:
            - key: members
              path: "family.txt"